{"ast":null,"code":"var _jsxFileName = \"/Users/ore/Documents/docker-vorboss/frontend/src/Data/Data.js\",\n  _s = $RefreshSig$();\nimport { UilChartBar, UilPoundCircle, UilPackage, UilInfoCircle } from \"@iconscout/react-unicons\";\nimport { metric_total_orders } from \"./Metrics\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconsole.log(metric_total_orders);\n\n// import metrics from './Metrics'\n\n// Metrics Cards Data\nexport const cardsData = [{\n  title: \"Total Orders\",\n  color: {\n    backGround: \"linear-gradient(180deg, #bb67ff 0%, #c484f3 100%)\",\n    boxShadow: \"0px 10px 20px 0px #e0c6f5\"\n  },\n  barValue: 70,\n  value: metric_total_orders,\n  png: UilInfoCircle,\n  series: [{\n    name: \"Sales\",\n    data: [31, 40, 28, 51, 42, 109, 100]\n  }]\n}, {\n  title: \"Monthly Orders\",\n  color: {\n    backGround: \"linear-gradient(180deg, #FF919D 0%, #FC929D 100%)\",\n    boxShadow: \"0px 10px 20px 0px #FDC0C7\"\n  },\n  barValue: 70,\n  value: 0,\n  png: UilChartBar,\n  series: [{\n    name: \"Sales\",\n    data: [31, 40, 28, 51, 42, 109, 100]\n  }]\n}, {\n  title: \"Orders in Progress\",\n  color: {\n    backGround: \"linear-gradient(rgb(248, 212, 154) -146.42%, rgb(255 202 113) -46.42%)\",\n    boxShadow: \"0px 10px 20px 0px #F9D59B\"\n  },\n  barValue: 70,\n  value: 0,\n  png: UilPackage,\n  series: [{\n    name: \"Sales\",\n    data: [31, 40, 28, 51, 42, 109, 100]\n  }]\n}, {\n  title: \"Revenue\",\n  color: {\n    backGround: \"linear-gradient(180deg, #00bfff 0%, #00bfff 100%)\",\n    boxShadow: \"0px 10px 20px 0px #e0c6f5\"\n  },\n  barValue: 70,\n  value: 0,\n  png: UilPoundCircle,\n  series: [{\n    name: \"Sales\",\n    data: [31, 40, 28, 51, 42, 109, 100]\n  }]\n}];\nexport function Data() {\n  _s();\n  const [metrics, setMetrics] = useState([]);\n  useEffect(() => {\n    axios.get('/dashboard').then(res => setMetrics(res.data));\n  }, []);\n\n  //metrics is the array\n\n  // defaultMetrics = metrics.map((metric, index) => {\n  //     < p key={index}></p>\n  //     metric_total_orders = metric.total_orders\n  //\n  // })\n\n  console.log('1', metric_total_orders);\n  return metrics.map((p, index) => {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [p.total_orders, \" \", p.total_monthly_orders, \" \", p.total_orders_in_progress, \" \", p.revenue, \" \"]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 16\n    }, this);\n  });\n}\n_s(Data, \"3FqZ41HS/PZEpujpm699BM0f8kU=\");\n_c = Data;\nvar _c;\n$RefreshReg$(_c, \"Data\");","map":{"version":3,"names":["UilChartBar","UilPoundCircle","UilPackage","UilInfoCircle","metric_total_orders","useEffect","useState","axios","console","log","cardsData","title","color","backGround","boxShadow","barValue","value","png","series","name","data","Data","metrics","setMetrics","get","then","res","map","p","index","total_orders","total_monthly_orders","total_orders_in_progress","revenue"],"sources":["/Users/ore/Documents/docker-vorboss/frontend/src/Data/Data.js"],"sourcesContent":["import {\n    UilChartBar,\n    UilPoundCircle,\n    UilPackage,\n    UilInfoCircle\n} from \"@iconscout/react-unicons\";\n\nimport {metric_total_orders} from \"./Metrics\";\nimport {useEffect, useState} from \"react\";\nimport axios from \"axios\";\n\nconsole.log(metric_total_orders)\n\n// import metrics from './Metrics'\n\n\n// Metrics Cards Data\nexport const cardsData = [\n    {\n        title: \"Total Orders\",\n        color: {\n            backGround: \"linear-gradient(180deg, #bb67ff 0%, #c484f3 100%)\",\n            boxShadow: \"0px 10px 20px 0px #e0c6f5\",\n        },\n        barValue: 70,\n        value: metric_total_orders,\n        png: UilInfoCircle,\n        series: [\n            {\n                name: \"Sales\",\n                data: [31, 40, 28, 51, 42, 109, 100],\n            },\n        ],\n    },\n    {\n        title: \"Monthly Orders\",\n        color: {\n            backGround: \"linear-gradient(180deg, #FF919D 0%, #FC929D 100%)\",\n            boxShadow: \"0px 10px 20px 0px #FDC0C7\",\n        },\n        barValue: 70,\n        value: 0,\n        png: UilChartBar,\n        series: [\n            {\n                name: \"Sales\",\n                data: [31, 40, 28, 51, 42, 109, 100],\n            },\n        ],\n\n    },\n    {\n        title: \"Orders in Progress\",\n        color: {\n            backGround:\n                \"linear-gradient(rgb(248, 212, 154) -146.42%, rgb(255 202 113) -46.42%)\",\n            boxShadow: \"0px 10px 20px 0px #F9D59B\",\n        },\n        barValue: 70,\n        value: 0,\n        png: UilPackage,\n        series: [\n            {\n                name: \"Sales\",\n                data: [31, 40, 28, 51, 42, 109, 100],\n            },\n        ],\n\n    },\n    {\n        title: \"Revenue\",\n        color: {\n            backGround: \"linear-gradient(180deg, #00bfff 0%, #00bfff 100%)\",\n            boxShadow: \"0px 10px 20px 0px #e0c6f5\",\n        },\n        barValue: 70,\n        value: 0,\n        png: UilPoundCircle,\n        series: [\n            {\n                name: \"Sales\",\n                data: [31, 40, 28, 51, 42, 109, 100],\n            },\n        ],\n\n\n    },\n];\n\nexport function Data() {\n\n\n    const [metrics, setMetrics] = useState([]);\n    useEffect(() => {\n        axios.get('/dashboard').then(res => setMetrics(res.data));\n    }, []);\n\n    //metrics is the array\n\n\n    // defaultMetrics = metrics.map((metric, index) => {\n    //     < p key={index}></p>\n    //     metric_total_orders = metric.total_orders\n    //\n    // })\n\n    console.log('1', metric_total_orders)\n\n    return metrics.map((p, index) => {\n\n        return <p key={index}>{p.total_orders} {p.total_monthly_orders} {p.total_orders_in_progress} {p.revenue} </p>\n    })\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}