{"ast":null,"code":"var _jsxFileName = \"/Users/ore/Documents/docker-vorboss/frontend/src/Dashboard.jsx\";\nimport React, { Component, useEffect, useState } from 'react';\nimport './Dashboard.css';\nimport Cards from \"../components/Cards/Cards\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst totalOrders = 0;\nlet defaultMetrics = {\n  totalOrders: 0,\n  totalOrdersThisMonth: 0,\n  totalOrdersInProgress: 0,\n  revenue: 0,\n  expectedRevenue: 0,\n  recentOrders: []\n};\nconst Dashboard = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" Metrics Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Cards, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n\n// export function Dashboard() {\n//\n//     const [metrics, setMetrics] = useState([]);\n//     useEffect(() => {\n//         axios.get('/dashboard').then(res => setMetrics(res.data));\n//     }, []);\n//     //metrics is the array\n//\n//      defaultMetrics = metrics.map((metric, index) => {\n//        <p key={index}></p>\n//         console.log(defaultMetrics.totalOrders = metric.total_orders)\n//          console.log(\n//              defaultMetrics.recentOrders = metric.recentOrders\n//          )\n//\n//     })\n//\n//\n//     return metrics.map((p, index) => {\n//         return <p key={index}>{p.total_orders} {p.total_monthly_orders} {p.total_orders_in_progress} {p.revenue} </p>\n//     })\n// }\n\n// }export function Dashboard() {\n//\n//     const [metrics, setMetrics] = useState([]);\n//     useEffect(() => {\n//         axios.get('/dashboard').then(res => setMetrics(res.data));\n//     }, []);\n//     return metrics.map((p, index) => {\n//         return <p key={index}>{p.total_orders} {p.total_monthly_orders} {p.total_orders_in_progress} {p.revenue} </p>\n//     })\n// }\n\n// const Dashboard = () => {\n//     return (\n//         <Card>\n//             <Card.Header as=\"h5\">Featured</Card.Header>\n//             <Card.Body>\n//                 <Card.Title>Special title treatment</Card.Title>\n//                 <Card.Text>\n//                    1000\n//                 </Card.Text>\n//             </Card.Body>\n//         </Card>\n//     );\n// }\n\n// const Dashboard = () => {\n//\n//     return(\n//         <div>Dashboard</div>\n//     )\n//\n// }\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","Component","useEffect","useState","Cards","axios","totalOrders","defaultMetrics","totalOrdersThisMonth","totalOrdersInProgress","revenue","expectedRevenue","recentOrders","Dashboard"],"sources":["/Users/ore/Documents/docker-vorboss/frontend/src/Dashboard.jsx"],"sourcesContent":["import React, {Component, useEffect, useState} from 'react';\nimport './Dashboard.css'\nimport Cards from \"../components/Cards/Cards\";\nimport axios from \"axios\";\n\nconst totalOrders = 0\nlet defaultMetrics = {\n    totalOrders: 0,\n    totalOrdersThisMonth: 0,\n    totalOrdersInProgress: 0,\n    revenue: 0,\n    expectedRevenue: 0,\n    recentOrders: []\n}\n\nconst Dashboard = () => {\n    return (\n        <div className=\"Dashboard\">\n            <h1> Metrics Dashboard</h1>\n            <Cards/>\n        </div>\n    );\n}\n\n// export function Dashboard() {\n//\n//     const [metrics, setMetrics] = useState([]);\n//     useEffect(() => {\n//         axios.get('/dashboard').then(res => setMetrics(res.data));\n//     }, []);\n//     //metrics is the array\n//\n//      defaultMetrics = metrics.map((metric, index) => {\n//        <p key={index}></p>\n//         console.log(defaultMetrics.totalOrders = metric.total_orders)\n//          console.log(\n//              defaultMetrics.recentOrders = metric.recentOrders\n//          )\n//\n//     })\n//\n//\n//     return metrics.map((p, index) => {\n//         return <p key={index}>{p.total_orders} {p.total_monthly_orders} {p.total_orders_in_progress} {p.revenue} </p>\n//     })\n// }\n\n// }export function Dashboard() {\n//\n//     const [metrics, setMetrics] = useState([]);\n//     useEffect(() => {\n//         axios.get('/dashboard').then(res => setMetrics(res.data));\n//     }, []);\n//     return metrics.map((p, index) => {\n//         return <p key={index}>{p.total_orders} {p.total_monthly_orders} {p.total_orders_in_progress} {p.revenue} </p>\n//     })\n// }\n\n\n// const Dashboard = () => {\n//     return (\n//         <Card>\n//             <Card.Header as=\"h5\">Featured</Card.Header>\n//             <Card.Body>\n//                 <Card.Title>Special title treatment</Card.Title>\n//                 <Card.Text>\n//                    1000\n//                 </Card.Text>\n//             </Card.Body>\n//         </Card>\n//     );\n// }\n\n\n// const Dashboard = () => {\n//\n//     return(\n//         <div>Dashboard</div>\n//     )\n//\n// }\n\nexport default Dashboard\n\n"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,SAAS,EAAEC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAC3D,OAAO,iBAAiB;AACxB,OAAOC,KAAK,MAAM,2BAA2B;AAC7C,OAAOC,KAAK,MAAM,OAAO;AAAC;AAE1B,MAAMC,WAAW,GAAG,CAAC;AACrB,IAAIC,cAAc,GAAG;EACjBD,WAAW,EAAE,CAAC;EACdE,oBAAoB,EAAE,CAAC;EACvBC,qBAAqB,EAAE,CAAC;EACxBC,OAAO,EAAE,CAAC;EACVC,eAAe,EAAE,CAAC;EAClBC,YAAY,EAAE;AAClB,CAAC;AAED,MAAMC,SAAS,GAAG,MAAM;EACpB,oBACI;IAAK,SAAS,EAAC,WAAW;IAAA,wBACtB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAA2B,eAC3B,QAAC,KAAK;MAAA;MAAA;MAAA;IAAA,QAAE;EAAA;IAAA;IAAA;IAAA;EAAA,QACN;AAEd,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,KAjEMA,SAAS;AAmEf,eAAeA,SAAS;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}