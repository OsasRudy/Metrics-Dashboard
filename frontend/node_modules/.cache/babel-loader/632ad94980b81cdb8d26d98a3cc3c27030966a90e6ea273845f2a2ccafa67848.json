{"ast":null,"code":"var _jsxFileName = \"/Users/ore/Documents/docker-vorboss/frontend/src/Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { Component, useEffect, useState } from 'react';\nimport { Row, Col } from \"react-bootstrap\";\nimport './Dashboard.css';\nimport Cards from \"./components/Cards/Cards\";\nimport Table from \"./components/Table/Table\";\nimport axios from \"axios\";\nimport MetricCard from \"./components/MetricCard/MetricCard\";\nimport { UilChartBar, UilPoundCircle, UilPackage, UilInfoCircle } from \"@iconscout/react-unicons\";\nimport { Icon } from '@iconify/react';\nimport chartBar from '@iconify/icons-uil/chart-bar';\nimport { Data } from \"./Data/Data\";\nimport { metric_total_orders, Metrics } from \"./Data/Metrics\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet defaultMetrics = {\n  totalOrders: 0,\n  totalOrdersThisMonth: 0,\n  totalOrdersInProgress: 0,\n  revenue: 0,\n  expectedRevenue: 0,\n  recentOrders: []\n};\nexport let metric_total_order = 0;\nexport let metric_monthly_order = 0;\nexport let metric_orders_in_progress = 0;\nexport let metric_revenue = 0;\nconst Dashboard = () => {\n  _s();\n  const [metrics, setMetrics] = useState([]);\n  useEffect(() => {\n    axios.get('/dashboard').then(res => setMetrics(res.data));\n  }, []);\n\n  //metrics is the array\n\n  defaultMetrics = metrics.map((metric, index) => {\n    /*#__PURE__*/_jsxDEV(\"p\", {}, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this);\n    metric_total_order = metric.total_orders;\n    metric_monthly_order = metric.total_monthly_orders;\n    metric_orders_in_progress = metric.total_orders_in_progress;\n    metric_revenue = metric.revenue;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" Metrics Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: metric_total_order\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Icon, {\n        icon: chartBar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 18\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Cards, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"metricDisplay\",\n      children: [/*#__PURE__*/_jsxDEV(MetricCard, {\n        title: \"Total Orders\",\n        value: metric_total_order,\n        png: chartBar,\n        color: {\n          background: 'linear-gradient(180deg, #bb67ff 0%, #c484f3 100%)',\n          boxShadow: \"0px 10px 20px 0px #e0c6f5\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(MetricCard, {\n        title: \"Monthly Orders\",\n        value: metric_monthly_order,\n        png: chartBar,\n        color: {\n          background: 'linear-gradient(180deg, #FF919D 0%, #FC929D 100%)',\n          boxShadow: \"0px 10px 20px 0px #FDC0C7\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(MetricCard, {\n        title: \"Orders in progress\",\n        value: metric_orders_in_progress,\n        png: chartBar,\n        color: {\n          background: 'linear-gradient(rgb(248, 212, 154) -146.42%, rgb(255 202 113) -46.42%)',\n          boxShadow: \"0px 10px 20px 0px #FDC0C7\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(MetricCard, {\n        title: \"Revenue\",\n        value: metric_revenue,\n        png: chartBar,\n        color: {\n          background: 'linear-gradient(180deg, #00bfff 0%, #00bfff 100%)',\n          boxShadow: \"0px 10px 20px 0px #FDC0C7\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \" Recent Orders\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Table, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n\n// <div className=\"Dashboard\">\n//     <h1> Metrics Dashboard</h1>\n//     <>\n//         <Col className=\"m-4\">\n//             <Row className=\"m-4 d-flex justify-content-between\">\n//                 <MetricCard\n//                     title={\"Total Orders\"}\n//                     value={metrics.total_orders}\n//                     png={UilChartBar}\n//\n//                 />\n//             </Row>\n//         </Col>\n//     </>\n//     <h3> Recent Orders</h3>\n//     <Table/>\n// </div>\n//     );\n// }\n// const Dashboard = () => {\n//     return (\n//         <div className=\"Dashboard\">\n//             <h1> Metrics Dashboard</h1>\n//             <Metrics/>\n//             <Cards/>\n//             <h3> Recent Orders</h3>\n//             <Table/>\n//\n//         </div>\n//     );\n// }\n\n// export function Dashboard() {\n//\n//     const [metrics, setMetrics] = useState([]);\n//     useEffect(() => {\n//         axios.get('/dashboard').then(res => setMetrics(res.data));\n//     }, []);\n//     //metrics is the array\n//\n//      defaultMetrics = metrics.map((metric, index) => {\n//        <p key={index}></p>\n//         console.log(defaultMetrics.totalOrders = metric.total_orders)\n//          console.log(\n//              defaultMetrics.recentOrders = metric.recentOrders\n//          )\n//\n//     })\n//\n//\n//     return metrics.map((p, index) => {\n//         return <p key={index}>{p.total_orders} {p.total_monthly_orders} {p.total_orders_in_progress} {p.revenue} </p>\n//     })\n// }\n\n// }export function Dashboard() {\n//\n//     const [metrics, setMetrics] = useState([]);\n//     useEffect(() => {\n//         axios.get('/dashboard').then(res => setMetrics(res.data));\n//     }, []);\n//     return metrics.map((p, index) => {\n//         return <p key={index}>{p.total_orders} {p.total_monthly_orders} {p.total_orders_in_progress} {p.revenue} </p>\n//     })\n// }\n\n// const Dashboard = () => {\n//     return (\n//         <Card>\n//             <Card.Header as=\"h5\">Featured</Card.Header>\n//             <Card.Body>\n//                 <Card.Title>Special title treatment</Card.Title>\n//                 <Card.Text>\n//                    1000\n//                 </Card.Text>\n//             </Card.Body>\n//         </Card>\n//     );\n// }\n\n// const Dashboard = () => {\n//\n//     return(\n//         <div>Dashboard</div>\n//     )\n//\n// }\n_s(Dashboard, \"3FqZ41HS/PZEpujpm699BM0f8kU=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","Component","useEffect","useState","Row","Col","Cards","Table","axios","MetricCard","UilChartBar","UilPoundCircle","UilPackage","UilInfoCircle","Icon","chartBar","Data","metric_total_orders","Metrics","defaultMetrics","totalOrders","totalOrdersThisMonth","totalOrdersInProgress","revenue","expectedRevenue","recentOrders","metric_total_order","metric_monthly_order","metric_orders_in_progress","metric_revenue","Dashboard","metrics","setMetrics","get","then","res","data","map","metric","index","total_orders","total_monthly_orders","total_orders_in_progress","background","boxShadow"],"sources":["/Users/ore/Documents/docker-vorboss/frontend/src/Dashboard.jsx"],"sourcesContent":["import React, {Component, useEffect, useState} from 'react';\nimport { Row, Col } from \"react-bootstrap\";\nimport './Dashboard.css'\nimport Cards from \"./components/Cards/Cards\";\nimport Table from \"./components/Table/Table\"\nimport axios from \"axios\";\n\n\nimport MetricCard from \"./components/MetricCard/MetricCard\";\nimport {\n    UilChartBar,\n    UilPoundCircle,\n    UilPackage,\n    UilInfoCircle\n} from \"@iconscout/react-unicons\";\n\nimport { Icon } from '@iconify/react';\nimport chartBar from '@iconify/icons-uil/chart-bar';\n\nimport {Data} from \"./Data/Data\";\nimport {metric_total_orders, Metrics} from \"./Data/Metrics\";\n\n\nlet defaultMetrics = {\n    totalOrders: 0,\n    totalOrdersThisMonth: 0,\n    totalOrdersInProgress: 0,\n    revenue: 0,\n    expectedRevenue: 0,\n    recentOrders: []\n}\n\nexport let metric_total_order = 0\nexport let metric_monthly_order = 0\nexport let metric_orders_in_progress = 0\nexport let metric_revenue = 0\nconst Dashboard = () => {\n    const  [metrics, setMetrics] = useState([]);\n    useEffect(() => {\n        axios.get('/dashboard').then(res => setMetrics(res.data));\n    }, []);\n\n    //metrics is the array\n\n\n\n    defaultMetrics = metrics.map((metric, index) => {\n        < p key={index}></p>\n        metric_total_order = metric.total_orders;\n        metric_monthly_order = metric.total_monthly_orders;\n        metric_orders_in_progress = metric.total_orders_in_progress;\n        metric_revenue = metric.revenue\n\n\n    })\n\n    return (\n        <div className=\"Dashboard\">\n            <h1> Metrics Dashboard</h1>\n            <div>{metric_total_order}</div>\n            <div><Icon icon={chartBar} /></div>\n            {/*<Metrics/>*/}\n            <Cards/>\n            <div className=\"metricDisplay\">\n            <MetricCard\n                title={\"Total Orders\"}\n                value={metric_total_order}\n                png={chartBar}\n                color={{background:'linear-gradient(180deg, #bb67ff 0%, #c484f3 100%)',\n                    boxShadow: \"0px 10px 20px 0px #e0c6f5\"}}\n            />\n            <MetricCard\n                title={\"Monthly Orders\"}\n                value={metric_monthly_order}\n                png={chartBar}\n                color={{background:'linear-gradient(180deg, #FF919D 0%, #FC929D 100%)',\n                    boxShadow: \"0px 10px 20px 0px #FDC0C7\"}}\n            />\n            <MetricCard\n                title={\"Orders in progress\"}\n                value={metric_orders_in_progress}\n                png={chartBar}\n                color={{background:'linear-gradient(rgb(248, 212, 154) -146.42%, rgb(255 202 113) -46.42%)',\n                    boxShadow:\"0px 10px 20px 0px #FDC0C7\"}}\n            />\n            <MetricCard\n                title={\"Revenue\"}\n                value={metric_revenue}\n                png={chartBar}\n                color={{background:'linear-gradient(180deg, #00bfff 0%, #00bfff 100%)',\n                    boxShadow:\"0px 10px 20px 0px #FDC0C7\"}}\n            />\n            </div>\n            <h3> Recent Orders</h3>\n            <Table/>\n        </div>\n\n    );\n}\n\n\n        // <div className=\"Dashboard\">\n        //     <h1> Metrics Dashboard</h1>\n        //     <>\n        //         <Col className=\"m-4\">\n        //             <Row className=\"m-4 d-flex justify-content-between\">\n        //                 <MetricCard\n        //                     title={\"Total Orders\"}\n        //                     value={metrics.total_orders}\n        //                     png={UilChartBar}\n        //\n        //                 />\n        //             </Row>\n        //         </Col>\n        //     </>\n        //     <h3> Recent Orders</h3>\n        //     <Table/>\n        // </div>\n//     );\n// }\n// const Dashboard = () => {\n//     return (\n//         <div className=\"Dashboard\">\n//             <h1> Metrics Dashboard</h1>\n//             <Metrics/>\n//             <Cards/>\n//             <h3> Recent Orders</h3>\n//             <Table/>\n//\n//         </div>\n//     );\n// }\n\n\n// export function Dashboard() {\n//\n//     const [metrics, setMetrics] = useState([]);\n//     useEffect(() => {\n//         axios.get('/dashboard').then(res => setMetrics(res.data));\n//     }, []);\n//     //metrics is the array\n//\n//      defaultMetrics = metrics.map((metric, index) => {\n//        <p key={index}></p>\n//         console.log(defaultMetrics.totalOrders = metric.total_orders)\n//          console.log(\n//              defaultMetrics.recentOrders = metric.recentOrders\n//          )\n//\n//     })\n//\n//\n//     return metrics.map((p, index) => {\n//         return <p key={index}>{p.total_orders} {p.total_monthly_orders} {p.total_orders_in_progress} {p.revenue} </p>\n//     })\n// }\n\n// }export function Dashboard() {\n//\n//     const [metrics, setMetrics] = useState([]);\n//     useEffect(() => {\n//         axios.get('/dashboard').then(res => setMetrics(res.data));\n//     }, []);\n//     return metrics.map((p, index) => {\n//         return <p key={index}>{p.total_orders} {p.total_monthly_orders} {p.total_orders_in_progress} {p.revenue} </p>\n//     })\n// }\n\n\n// const Dashboard = () => {\n//     return (\n//         <Card>\n//             <Card.Header as=\"h5\">Featured</Card.Header>\n//             <Card.Body>\n//                 <Card.Title>Special title treatment</Card.Title>\n//                 <Card.Text>\n//                    1000\n//                 </Card.Text>\n//             </Card.Body>\n//         </Card>\n//     );\n// }\n\n\n// const Dashboard = () => {\n//\n//     return(\n//         <div>Dashboard</div>\n//     )\n//\n// }\n\nexport default Dashboard\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}